version: 2.1

executors:
  default:
    docker:
      - image: circleci/golang:1.12.6
        environment:
          - GO111MODULE: "on"
          - GOCACHE: "/tmp/go/cache"
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: bookbasket
          TZ: "Asia/Tokyo"
    working_directory: ~/workspace

commands:
  restore_mod_cache:
    steps:
      - restore_cache:
          name: Restore go modules cache
          keys:
            - go-mod-v1-{{ checksum "./server/go.sum" }}
  save_mod_cache:
    steps:
      - save_cache:
          name: Save go modules cache
          key: go-mod-v1-{{ checksum "./server/go.sum" }}
          paths:
            - /go/pkg/mod
  restore_build_cache:
    steps:
      - restore_cache:
          name: Restore go build cache
          keys:
            - go-build-v1-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
            - go-build-v1-master-
  save_build_cache:
    steps:
      - save_cache:
          name: Save go build cache
          key: go-build-v1-{{ .Branch }}-{{ .Environment.CIRCLE_BUILD_NUM }}
          paths:
            - /tmp/go/cache

jobs:
  mod:
    executor: default
    steps:
      - checkout
      - run:
          name: Go version
          command: go version
      - restore_mod_cache
      - run:
          command: go mod download
      - save_mod_cache
  lint:
    executor: default
    steps:
      - checkout
      - run:
          name: Install GolangCI-Lint v1.17.1
          command: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.17.1
      - run:
          name: GolangCI-Lint version
          command: ./bin/golangci-lint --version
      - run:
          command: |
            cd ./server
            ../bin/golangci-lint run
  build:
    executor: default
    steps:
      - checkout
      - restore_mod_cache
      - restore_build_cache
      - run:
          command: |
            cd ./server
            go build -v
      - save_build_cache
  test:
    executor: default
    steps:
      - checkout
      - restore_mod_cache
      - restore_build_cache
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI; Import dummy data; run an example query
          command: |
            sudo apt-get install mysql-client
            mysql -h 127.0.0.1 -u root -root bookbasket < ./database/sql/setup.sql
      - run:
          name: Run go tests
          command: |
            cd ./server
            go test ./... -race -coverprofile=coverage.txt -covermode=atomic
      - run:
          name: Upload coverage results to Codecov
          command: bash <(curl -s https://codecov.io/bash)
  # TODO: deploy job

workflows:
  version: 2
  main:
    jobs:
      - mod
      - lint:
          requires:
            - mod
      - build:
          requires:
            - mod
      - test:
          requires:
            - build
